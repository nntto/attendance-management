openapi: 3.0.0
info:
  title: attendance-management-api
  version: "1.0"
servers:
- url: http://localhost:4010
tags:
- description: 在室一覧(/rooms)ページで用いるAPI群
  name: rooms
- description: ユーザー情報設定(/setting)ページで用いるAPI群
  name: setting
paths:
  /api/rooms/users:
    get:
      description: 部屋情報と各部屋にいるユーザー一覧，ニックネーム，最新のコメントを取得．inRoomには，デバイスの最終接続日時が2分以内のユーザー一覧を部屋ごとに提示(デバイスのlastConnectedAtを参考に計算する)．outRoomには，inRoomではないユーザー一覧を提示する．
      operationId: getUsersInRoom
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inroom_and_outroom_users'
          description: OK
      summary: 各部屋のユーザーとニックネームを取得
      tags:
      - rooms
  /api/rooms/nickname:
    put:
      operationId: createUserNickname
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/nickname'
      responses:
        "200":
          description: OK
      summary: ニックネームを新たに設定，または更新
      tags:
      - rooms
  /api/setting/user/{user_id}:
    get:
      description: ""
      operationId: getUser
      parameters:
      - description: ユーザーID
        in: path
        name: user_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user'
          description: OK
      summary: 指定したユーザーの情報を取得
      tags:
      - setting
    put:
      description: ""
      operationId: updateUser
      parameters:
      - description: ユーザーID
        in: path
        name: user_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/user_dynamic_props'
      responses:
        "200":
          description: OK
      summary: 指定したユーザーの情報を更新
      tags:
      - setting
  /api/setting/devices/{user_id}:
    get:
      description: 部屋ごとのデバイスリストと，ネットワーク，MACアドレスを返す
      operationId: getDevices
      parameters:
      - description: ユーザーID
        in: path
        name: user_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user_device'
          description: OK
      summary: 指定したユーザーの持つデバイス一覧を取得
      tags:
      - setting
  /api/setting/device/{device_id}:
    delete:
      description: ""
      operationId: deleteDevice
      parameters:
      - description: デバイスID
        in: path
        name: device_id
        required: true
        schema:
          type: integer
      responses:
        "200":
          description: OK
      summary: 指定したデバイスを削除．この時，デバイスに紐づけられたMACアドレスも全て削除する．
      tags:
      - setting
    get:
      description: ""
      operationId: getDevice
      parameters:
      - description: デバイスID
        in: path
        name: device_id
        required: true
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/device'
          description: OK
      summary: 指定したデバイスの情報を取得
      tags:
      - setting
    put:
      description: ""
      operationId: putDevice
      parameters:
      - description: デバイスID
        in: path
        name: device_id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/device_dynamic_props'
      responses:
        "200":
          description: OK
      summary: 指定したデバイスの情報を変更
      tags:
      - setting
  /api/setting/device:
    post:
      description: ""
      operationId: postDevice
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/device_dynamic_props'
      responses:
        "200":
          description: OK
      summary: 新しいデバイスを追加
      tags:
      - setting
  /api/setting/mac_address/{mac_address_id}:
    delete:
      description: ""
      operationId: deleteMacAddress
      parameters:
      - description: MACアドレスID
        in: path
        name: mac_address_id
        required: true
        schema:
          type: integer
      responses:
        "200":
          description: OK
      summary: 指定したMACアドレス削除
      tags:
      - setting
    get:
      description: ""
      operationId: getMacAddress
      parameters:
      - description: MACアドレスID
        in: path
        name: mac_address_id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/mac_address'
      responses:
        "200":
          description: OK
      summary: 指定したMACアドレスの情報を取得
      tags:
      - setting
    put:
      description: ""
      operationId: putMacAddress
      parameters:
      - description: MACアドレスID
        in: path
        name: mac_address_id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/mac_address_dynamic_props'
      responses:
        "200":
          description: OK
      summary: 指定したMACアドレスの情報を変更
      tags:
      - setting
  /api/setting/mac_address:
    post:
      description: ""
      operationId: postMacAddress
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/mac_address'
      responses:
        "200":
          description: OK
      summary: 新しいMACアドレスを追加
      tags:
      - setting
components:
  parameters:
    user_id:
      description: ユーザーID
      in: path
      name: user_id
      required: true
      schema:
        type: string
    device_id:
      description: デバイスID
      in: path
      name: device_id
      required: true
      schema:
        type: integer
    mac_address_id:
      description: MACアドレスID
      in: path
      name: mac_address_id
      required: true
      schema:
        type: integer
  schemas:
    inroom_and_outroom_users:
      properties:
        inRoom:
          items:
            $ref: '#/components/schemas/inroom_and_outroom_users_inRoom_inner'
          maxItems: 4
          type: array
        outRoom:
          items:
            $ref: '#/components/schemas/inroom_and_outroom_users_inRoom_inner_allOf_users_inner'
          maxItems: 10
          type: array
      required:
      - inRoom
      - outRoom
      type: object
    nickname:
      properties:
        id:
          description: ニックネームの識別ID
          readOnly: true
          type: integer
        fromId:
          description: ニックネームを付けたユーザーのID
          type: string
        toId:
          description: ニックネームの付けられたユーザーのID
          type: string
        nickname:
          description: ニックネーム
          type: string
          x-faker: internet.userName
      required:
      - fromId
      - id
      - nickname
      - toId
      type: object
    user:
      allOf:
      - $ref: '#/components/schemas/user_allOf'
      - $ref: '#/components/schemas/user_dynamic_props'
      required:
      - grade
      - iconUrl
      - id
      - name
      type: object
    user_dynamic_props:
      properties:
        name:
          description: ユーザーの名前
          type: string
          x-faker: name.findName
        grade:
          description: ユーザーの学年
          enum:
          - B1
          - B2
          - B3
          - B4
          - M1
          - M2
          - D1
          - D2
          - D3
          type: string
        iconUrl:
          description: ユーザーのプロフィール画像
          type: string
          x-faker: image.imageUrl
      type: object
    user_device:
      properties:
        rooms:
          items:
            $ref: '#/components/schemas/user_device_rooms_inner'
          maxItems: 4
          type: array
      required:
      - rooms
      type: object
    device:
      allOf:
      - $ref: '#/components/schemas/device_allOf'
      - $ref: '#/components/schemas/device_dynamic_props'
      required:
      - id
      - name
      - userId
      type: object
    device_dynamic_props:
      properties:
        userId:
          description: デバイスを所持しているユーザーのID
          type: string
        name:
          description: デバイスの名前
          example: 僕のiphone
          type: string
          x-faker: commerce.productMaterial
      type: object
    mac_address:
      allOf:
      - $ref: '#/components/schemas/mac_address_allOf'
      - $ref: '#/components/schemas/mac_address_dynamic_props'
      required:
      - address
      - deviceId
      - id
      - lastConnectedAt
      - macAddressId
      - networkId
      type: object
    mac_address_dynamic_props:
      properties:
        address:
          description: デバイスのmisaddress
          type: string
          x-faker: internet.mac
        networkId:
          description: 接続先のネットワークのID
          type: integer
        deviceId:
          description: デバイスの識別ID
          type: integer
      type: object
    room:
      properties:
        id:
          description: 部屋の識別ID
          type: integer
        name:
          description: 部屋の名前
          example: 部屋１
          type: string
          x-faker: company.name
      required:
      - id
      - name
      type: object
    comment:
      properties:
        id:
          description: コメントの識別ID
          readOnly: true
          type: integer
        userId:
          description: コメント主のユーザーID
          type: string
        comment:
          description: コメント本文
          type: string
          x-faker: word.conjunction
        createdAt:
          description: 投稿日時
          format: date-time
          type: string
          x-faker: datatype.datetime
      required:
      - comment
      - createdAt
      - id
      - userId
      type: object
    network:
      properties:
        id:
          description: ネットワークの識別ID
          type: integer
        roomId:
          description: ネットワークの置かれている部屋のID
          type: integer
        name:
          description: ネットワークの名前
          example: wifi-a
          type: string
          x-faker: system.networkInterface
      required:
      - id
      - name
      - roomId
      type: object
    inroom_and_outroom_users_inRoom_inner_allOf_users_inner_allOf:
      properties:
        comment:
          $ref: '#/components/schemas/comment'
      type: object
    inroom_and_outroom_users_inRoom_inner_allOf_users_inner_allOf_1:
      properties:
        nickname:
          $ref: '#/components/schemas/nickname'
      type: object
    inroom_and_outroom_users_inRoom_inner_allOf_users_inner_allOf_2:
      properties:
        lastConnectedAt:
          format: date-time
          type: string
          x-faker: datatype.datetime
      type: object
    inroom_and_outroom_users_inRoom_inner_allOf_users_inner:
      allOf:
      - $ref: '#/components/schemas/user'
      - $ref: '#/components/schemas/inroom_and_outroom_users_inRoom_inner_allOf_users_inner_allOf'
      - $ref: '#/components/schemas/inroom_and_outroom_users_inRoom_inner_allOf_users_inner_allOf_1'
      - $ref: '#/components/schemas/inroom_and_outroom_users_inRoom_inner_allOf_users_inner_allOf_2'
    inroom_and_outroom_users_inRoom_inner_allOf:
      properties:
        users:
          items:
            $ref: '#/components/schemas/inroom_and_outroom_users_inRoom_inner_allOf_users_inner'
          maxItems: 10
          type: array
      required:
      - users
      type: object
    inroom_and_outroom_users_inRoom_inner:
      allOf:
      - $ref: '#/components/schemas/room'
      - $ref: '#/components/schemas/inroom_and_outroom_users_inRoom_inner_allOf'
    user_allOf:
      properties:
        id:
          description: ユーザーの識別ID
          readOnly: true
          type: string
      type: object
      example: null
    user_device_rooms_inner_allOf_devices_inner_allOf_addresses_inner_allOf:
      properties:
        network:
          $ref: '#/components/schemas/network'
        macAddress:
          $ref: '#/components/schemas/mac_address'
      required:
      - network
      type: object
    user_device_rooms_inner_allOf_devices_inner_allOf_addresses_inner:
      allOf:
      - $ref: '#/components/schemas/user_device_rooms_inner_allOf_devices_inner_allOf_addresses_inner_allOf'
    user_device_rooms_inner_allOf_devices_inner_allOf:
      properties:
        addresses:
          items:
            $ref: '#/components/schemas/user_device_rooms_inner_allOf_devices_inner_allOf_addresses_inner'
          maxItems: 8
          type: array
      required:
      - addresses
      type: object
    user_device_rooms_inner_allOf_devices_inner:
      allOf:
      - $ref: '#/components/schemas/device'
      - $ref: '#/components/schemas/user_device_rooms_inner_allOf_devices_inner_allOf'
    user_device_rooms_inner_allOf:
      properties:
        devices:
          items:
            $ref: '#/components/schemas/user_device_rooms_inner_allOf_devices_inner'
          maxItems: 5
          type: array
      required:
      - devices
      type: object
    user_device_rooms_inner:
      allOf:
      - $ref: '#/components/schemas/room'
      - $ref: '#/components/schemas/user_device_rooms_inner_allOf'
    device_allOf:
      properties:
        id:
          description: デバイスの識別ID
          readOnly: true
          type: integer
      type: object
      example: null
    mac_address_allOf:
      properties:
        id:
          description: MacAddressの識別ID
          readOnly: true
          type: integer
        lastConnectedAt:
          description: 最終接続日時
          format: date-time
          readOnly: true
          type: string
          x-faker: datatype.datetime
      type: object
      example: null
